                                      Content-based Recommender Systems with NLP

https://towardsdatascience.com/how-to-build-from-scratch-a-content-based-movie-recommender-with-natural-language-processing-25ad400eb243

Collaborative filters
This type of filter is based on users’ rates, and it will recommend us movies that we haven’t watched yet,
but users similar to us have, and like. 
To determine whether two users are similar or not, this filter considers the movies both of them watched and how they rated. 
By looking at the items in common, this type of algorithm will basically predict the ratings of a movie for a user
who hasn’t watched it yet, based on the similar users’ rates.
In order to work accurately, this type of filter needs ratings, and not all users rate products constantly. 
Some of them barely or never rate anything! Another characteristic of this method is the diversity in the recommendations,
that can be good or bad, depending on the case. 
For example, let’s say user A likes dystopian movies and dark comedy a lot.
User B also enjoys dystopian movies but never watched dark comedy. 
The collaborative filter will recommend dark comedy shows to user B, 
based on the common taste that the two users have for dystopian movies. 

This scenario can go two ways: either user B finds out that he/she likes dark comedy a lot, and in that case, great!!!
a lot of new things to watch on his/her list!
Or, user B really enjoys a lighter comedy style, and in that case the recommendation has not been successful.

Content based filters
This type of filter does not involve other users if not ourselves. Based on what we like, the algorithm will simply pick
items with similar content to recommend us.
In this case there will be less diversity in the recommendations, but this will work either the user rates things or not. 
If we compare this to the example above, maybe user B potentially likes dark comedy but he/she will never know,
unless he decides to give it a try autonomously, because this filter will only keep recommending dystopian movies or similar.

let’s briefly review the concept of cosine similarity. This is one of the metric that we can use when calculating similarity,
between users or contents.

Cosine similarity
We all are familiar with vectors: they can be 2D, 3D or whatever-D. Let’s think in 2D for a moment,
because it’s easier to picture in our mind, and let’s refresh the concept of dot product first. 
The dot product between two vectors is equal to the projection of one of them on the other.
Therefore, the dot product between two identical vectors (i.e. with identical components) is equal to their squared module,
while if the two are perpendicular (i.e. they do not share any directions), the dot product is zero.
By applying the definition of similarity, this will be in fact equal to 1 if the two vectors are identical,
and it will be 0 if the two are orthogonal.
In other words, the similarity is a number bounded between 0 and 1 that tells us how much the two vectors are similar.
Pretty straightforward!

Steps involved in training the Recommender Systems
1. Gather the data
2. Data cleaning
3. Modeling
4. Testing the recommender

Here they have implemented a movie recommender based on content based filtering and able to recommend 
Top5 movies similar to the given movie title.

- [x] Similarly our recommender system will be responsible for 
Company side :- recommend the Top candidates similar to the one that they have selected for interviews
Candidate side:- Recommend the Top companies that we think are most suitable for the candidate to apply
